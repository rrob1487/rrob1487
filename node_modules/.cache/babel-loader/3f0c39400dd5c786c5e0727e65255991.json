{"ast":null,"code":"var _jsxFileName = \"/home/robbie/School/react_resume_published/src/Components/ProjectPage.js\";\nimport { MDBCol, MDBContainer, MDBIcon, MDBJumbotron, MDBRow } from \"mdbreact\";\nimport React, { Component } from \"react\";\nimport { ProjectObjects } from \"./Projects\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport { Link } from \"react-router-dom\";\n\nclass ProjectPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ProjectName: \"Project Doesn't Exist\",\n      Pictures: ['me.jpg'],\n      ProjectDescription: \"bop\",\n      DateFinished: \"\",\n      Tools: \"\",\n      Lessons: \"\",\n      Link: null\n    };\n    ProjectPage.updateState = ProjectPage.updateState.bind(this);\n  }\n\n  componentDidMount() {\n    const ProjectName = this.props.match.params.ProjectName;\n    ProjectObjects.forEach((proj, index) => {\n      //if(proj.ProjectName === this.props.ProjectName){\n      if (proj.ProjectName === ProjectName) {\n        console.log(proj.ProjectName);\n        this.setState(proj);\n      }\n    });\n    this._isMounted = true;\n    console.log(\"isMounted: \".concat(this._isMounted));\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n    console.log(\"isMounted: \".concat(this._isMounted));\n  }\n\n  static updateState(ProjectName) {\n    ProjectObjects.forEach((proj, index) => {\n      if (proj.ProjectName === ProjectName) {\n        console.log(proj.ProjectName);\n        console.log(\"isMounted: \".concat(this._isMounted));\n\n        if (this._isMounted) {\n          this.setState(proj);\n        }\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(MDBContainer, {\n      fluid: true,\n      className: \"elegant-color-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Link, {\n      to: \"/Projects\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"back to all projects\"), React.createElement(MDBRow, {\n      style: {\n        height: \"15vh\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(MDBContainer, {\n      className: \"flex-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"text-light \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.state.ProjectName))), React.createElement(MDBCol, {\n      size: \"9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(MDBRow, {\n      center: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(MDBJumbotron, {\n      className: \"elegant-color z-depth-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      center: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"text-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Date Finished:\"), React.createElement(\"p\", {\n      className: \"text-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.state.DateFinished), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      className: \"text-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Project Description:\"), React.createElement(\"p\", {\n      className: \"text-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.state.ProjectDescription)), React.createElement(MDBCol, {\n      md: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Carousel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.state.Pictures.map(pic => React.createElement(Carousel.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      height: \"300vh\",\n      width: \"200vh\",\n      className: \" z-depth-3\",\n      src: process.env.PUBLIC_URL.concat(\"/pictures/\", pic),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(MDBRow, {\n      center: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"text-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"The following is a list of tools used during this project:\"), React.createElement(\"p\", {\n      className: \"text-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.state.Tools))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(MDBRow, {\n      center: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"text-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Lessons Learned:\"), React.createElement(\"p\", {\n      className: \"text-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.state.Lessons))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(MDBRow, {\n      center: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"text-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Link To Code:\"), React.createElement(\"p\", {\n      className: \"text-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, this.state.Link ? React.createElement(\"a\", {\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      href: this.state.Link,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(MDBIcon, {\n      fab: true,\n      icon: \"github\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), \"  \", this.state.Link) : \"Coming Soon\"))))))));\n  }\n\n}\n\nexport default ProjectPage;","map":{"version":3,"sources":["/home/robbie/School/react_resume_published/src/Components/ProjectPage.js"],"names":["MDBCol","MDBContainer","MDBIcon","MDBJumbotron","MDBRow","React","Component","ProjectObjects","Carousel","Link","ProjectPage","constructor","props","state","ProjectName","Pictures","ProjectDescription","DateFinished","Tools","Lessons","updateState","bind","componentDidMount","match","params","forEach","proj","index","console","log","setState","_isMounted","concat","componentWillUnmount","render","height","map","pic","process","env","PUBLIC_URL"],"mappings":"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","sourcesContent":["import {MDBCol, MDBContainer, MDBIcon, MDBJumbotron, MDBRow} from \"mdbreact\"\nimport React, {Component} from \"react\"\nimport {ProjectObjects} from \"./Projects\"\nimport Carousel from \"react-bootstrap/Carousel\"\nimport {Link} from \"react-router-dom\"\n\nclass ProjectPage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            ProjectName: \"Project Doesn't Exist\",\n            Pictures: ['me.jpg'],\n            ProjectDescription: \"bop\",\n            DateFinished: \"\",\n            Tools: \"\",\n            Lessons: \"\",\n            Link: null,\n        }\n        ProjectPage.updateState = ProjectPage.updateState.bind(this)\n    }\n\n    componentDidMount() {\n        const {ProjectName} = this.props.match.params\n        ProjectObjects.forEach((proj, index) => {\n            //if(proj.ProjectName === this.props.ProjectName){\n            if (proj.ProjectName === ProjectName) {\n                console.log(proj.ProjectName)\n                this.setState(proj)\n            }\n        })\n        this._isMounted = true\n        console.log(\"isMounted: \".concat(this._isMounted))\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false\n        console.log(\"isMounted: \".concat(this._isMounted))\n    }\n\n\n    static updateState(ProjectName) {\n        ProjectObjects.forEach((proj, index) => {\n            if (proj.ProjectName === ProjectName) {\n                console.log(proj.ProjectName)\n                console.log(\"isMounted: \".concat(this._isMounted))\n                if (this._isMounted) {\n                    this.setState(proj)\n                }\n            }\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <MDBContainer fluid className=\"elegant-color-dark\">\n                    <br/>\n                    <Link to=\"/Projects\">back to all projects</Link>\n                    <MDBRow style={{height: \"15vh\"}}>\n                        <MDBCol>\n                            <MDBContainer className=\"flex-center\">\n                                <h1 className=\"text-light \">{this.state.ProjectName}</h1>\n                            </MDBContainer>\n                        </MDBCol>\n                        <MDBCol size=\"9\"/>\n                    </MDBRow>\n                    <MDBRow center>\n                        <MDBCol md='8'>\n                            <MDBJumbotron className=\"elegant-color z-depth-5\">\n                                <MDBRow center>\n                                    <MDBCol md=\"5\">\n                                        <h2 className=\"text-light\">Date Finished:</h2>\n                                        <p className=\"text-light\">{this.state.DateFinished}</p>\n                                        <br/>\n                                        <h2 className=\"text-light\">Project Description:</h2>\n                                        <p className=\"text-light\">{this.state.ProjectDescription}</p>\n                                    </MDBCol>\n                                    <MDBCol md=\"2\"/>\n                                    <MDBCol md=\"3\">\n                                        <Carousel>\n                                            {this.state.Pictures.map((pic) => (\n                                                <Carousel.Item>\n                                                    <img height={\"300vh\"} width={\"200vh\"} className=\" z-depth-3\"\n                                                         src={process.env.PUBLIC_URL.concat(\"/pictures/\", pic)}/>\n                                                </Carousel.Item>\n                                            ))}\n\n                                        </Carousel>\n                                    </MDBCol>\n                                </MDBRow>\n                                <br/>\n                                <MDBRow center>\n                                    <MDBCol md=\"10\">\n                                        <h2 className=\"text-light\">The following is a list of tools used during this project:</h2>\n                                        <p className=\"text-light\">{this.state.Tools}</p>\n                                    </MDBCol>\n                                </MDBRow>\n                                <br/>\n                                <MDBRow center>\n                                    <MDBCol md=\"10\">\n                                        <h2 className=\"text-light\">Lessons Learned:</h2>\n                                        <p className=\"text-light\">{this.state.Lessons}</p>\n                                    </MDBCol>\n                                </MDBRow>\n                                <br/>\n                                <MDBRow center>\n                                    <MDBCol md=\"10\">\n                                        <h2 className=\"text-light\">Link To Code:</h2>\n                                        <p className=\"text-light\">{this.state.Link ? <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.state.Link}><MDBIcon fab icon=\"github\"/>  {this.state.Link}</a>: \"Coming Soon\"}</p>\n                                    </MDBCol>\n                                </MDBRow>\n                            </MDBJumbotron>\n                        </MDBCol>\n                    </MDBRow>\n                </MDBContainer>\n            </div>\n        )\n    }\n}\n\nexport default ProjectPage"]},"metadata":{},"sourceType":"module"}